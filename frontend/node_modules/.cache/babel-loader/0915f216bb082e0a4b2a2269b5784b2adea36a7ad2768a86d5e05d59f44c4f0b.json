{"ast":null,"code":"import { authService } from \"./authService\";\nconst API_BASE_URL = \"http://localhost:5000/api\";\nclass ApiService {\n  async makeRequest(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...authService.getAuthHeaders(),\n        ...options.headers\n      },\n      ...options\n    };\n    const response = await fetch(url, config);\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.detail || \"Request failed\");\n    }\n    return response.json();\n  }\n\n  // Search endpoints\n  async searchProjects(query) {\n    return this.makeRequest(\"/search/projects\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        query\n      })\n    });\n  }\n\n  // AI endpoints\n  async getProjectSuggestions(query) {\n    return this.makeRequest(\"/ai/suggestions\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        query\n      })\n    });\n  }\n  async improveIdea(idea) {\n    return this.makeRequest(\"/ai/improve\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        idea\n      })\n    });\n  }\n  async chatWithAI(message) {\n    return this.makeRequest(\"/ai/chat\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        message\n      })\n    });\n  }\n\n  // File endpoints\n  async uploadFile(file, title, description) {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"title\", title);\n    formData.append(\"description\", description);\n    return this.makeRequest(\"/files/upload\", {\n      method: \"POST\",\n      headers: {\n        ...authService.getAuthHeaders()\n      },\n      body: formData\n    });\n  }\n  async getSubmissions() {\n    return this.makeRequest(\"/files/submissions\");\n  }\n  async downloadFile(fileId) {\n    const token = localStorage.getItem(\"access_token\");\n    const response = await fetch(`${API_BASE_URL}/files/download/${fileId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Download failed\");\n    }\n    return response.blob();\n  }\n}\nexport const apiService = new ApiService();","map":{"version":3,"names":["authService","API_BASE_URL","ApiService","makeRequest","endpoint","options","url","config","headers","getAuthHeaders","response","fetch","ok","error","json","Error","detail","searchProjects","query","method","body","JSON","stringify","getProjectSuggestions","improveIdea","idea","chatWithAI","message","uploadFile","file","title","description","formData","FormData","append","getSubmissions","downloadFile","fileId","token","localStorage","getItem","Authorization","blob","apiService"],"sources":["F:/project_marketplace/frontend/src/services/apiService.js"],"sourcesContent":["import { authService } from \"./authService\"\n\nconst API_BASE_URL = \"http://localhost:5000/api\"\n\nclass ApiService {\n  async makeRequest(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...authService.getAuthHeaders(),\n        ...options.headers,\n      },\n      ...options,\n    }\n\n    const response = await fetch(url, config)\n\n    if (!response.ok) {\n      const error = await response.json()\n      throw new Error(error.detail || \"Request failed\")\n    }\n\n    return response.json()\n  }\n\n  // Search endpoints\n  async searchProjects(query) {\n    return this.makeRequest(\"/search/projects\", {\n      method: \"POST\",\n      body: JSON.stringify({ query }),\n    })\n  }\n\n  // AI endpoints\n  async getProjectSuggestions(query) {\n    return this.makeRequest(\"/ai/suggestions\", {\n      method: \"POST\",\n      body: JSON.stringify({ query }),\n    })\n  }\n\n  async improveIdea(idea) {\n    return this.makeRequest(\"/ai/improve\", {\n      method: \"POST\",\n      body: JSON.stringify({ idea }),\n    })\n  }\n\n  async chatWithAI(message) {\n    return this.makeRequest(\"/ai/chat\", {\n      method: \"POST\",\n      body: JSON.stringify({ message }),\n    })\n  }\n\n  // File endpoints\n  async uploadFile(file, title, description) {\n    const formData = new FormData()\n    formData.append(\"file\", file)\n    formData.append(\"title\", title)\n    formData.append(\"description\", description)\n\n    return this.makeRequest(\"/files/upload\", {\n      method: \"POST\",\n      headers: {\n        ...authService.getAuthHeaders(),\n      },\n      body: formData,\n    })\n  }\n\n  async getSubmissions() {\n    return this.makeRequest(\"/files/submissions\")\n  }\n\n  async downloadFile(fileId) {\n    const token = localStorage.getItem(\"access_token\")\n    const response = await fetch(`${API_BASE_URL}/files/download/${fileId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n\n    if (!response.ok) {\n      throw new Error(\"Download failed\")\n    }\n\n    return response.blob()\n  }\n}\n\nexport const apiService = new ApiService()\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}