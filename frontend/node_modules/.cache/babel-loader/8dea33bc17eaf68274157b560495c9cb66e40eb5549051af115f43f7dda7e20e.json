{"ast":null,"code":"const API_BASE_URL = \"http://localhost:5000/api\";\nclass AuthService {\n  async login(email, password) {\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.detail || \"Login failed\");\n    }\n    return response.json();\n  }\n  async register(name, email, password, role) {\n    const response = await fetch(`${API_BASE_URL}/auth/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n        role\n      })\n    });\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.detail || \"Registration failed\");\n    }\n    return response.json();\n  }\n  async logout() {\n    const token = localStorage.getItem(\"access_token\");\n    if (token) {\n      const response = await fetch(`${API_BASE_URL}/auth/logout`, {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        console.error(\"Logout request failed\");\n      }\n    }\n  }\n  getAuthHeaders() {\n    const token = localStorage.getItem(\"access_token\");\n    return token ? {\n      Authorization: `Bearer ${token}`\n    } : {};\n  }\n}\nexport const authService = new AuthService();","map":{"version":3,"names":["API_BASE_URL","AuthService","login","email","password","response","fetch","method","headers","body","JSON","stringify","ok","error","json","Error","detail","register","name","role","logout","token","localStorage","getItem","Authorization","console","getAuthHeaders","authService"],"sources":["D:/p2/Project_market_place/Project_market_place/project_market_place/frontend/src/services/authService.js"],"sourcesContent":["const API_BASE_URL = \"http://localhost:5000/api\"\r\n\r\nclass AuthService {\r\n  async login(email, password) {\r\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    })\r\n\r\n    if (!response.ok) {\r\n      const error = await response.json()\r\n      throw new Error(error.detail || \"Login failed\")\r\n    }\r\n\r\n    return response.json()\r\n  }\r\n\r\n  async register(name, email, password, role) {\r\n    const response = await fetch(`${API_BASE_URL}/auth/register`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ name, email, password, role }),\r\n    })\r\n\r\n    if (!response.ok) {\r\n      const error = await response.json()\r\n      throw new Error(error.detail || \"Registration failed\")\r\n    }\r\n\r\n    return response.json()\r\n  }\r\n\r\n  async logout() {\r\n    const token = localStorage.getItem(\"access_token\")\r\n\r\n    if (token) {\r\n      const response = await fetch(`${API_BASE_URL}/auth/logout`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n\r\n      if (!response.ok) {\r\n        console.error(\"Logout request failed\")\r\n      }\r\n    }\r\n  }\r\n\r\n  getAuthHeaders() {\r\n    const token = localStorage.getItem(\"access_token\")\r\n    return token ? { Authorization: `Bearer ${token}` } : {}\r\n  }\r\n}\r\n\r\nexport const authService = new AuthService()\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,WAAW,CAAC;EAChB,MAAMC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,aAAa,EAAE;MACzDO,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAMC,KAAK,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACnC,MAAM,IAAIC,KAAK,CAACF,KAAK,CAACG,MAAM,IAAI,cAAc,CAAC;IACjD;IAEA,OAAOX,QAAQ,CAACS,IAAI,CAAC,CAAC;EACxB;EAEA,MAAMG,QAAQA,CAACC,IAAI,EAAEf,KAAK,EAAEC,QAAQ,EAAEe,IAAI,EAAE;IAC1C,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,gBAAgB,EAAE;MAC5DO,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEO,IAAI;QAAEf,KAAK;QAAEC,QAAQ;QAAEe;MAAK,CAAC;IACtD,CAAC,CAAC;IAEF,IAAI,CAACd,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAMC,KAAK,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACnC,MAAM,IAAIC,KAAK,CAACF,KAAK,CAACG,MAAM,IAAI,qBAAqB,CAAC;IACxD;IAEA,OAAOX,QAAQ,CAACS,IAAI,CAAC,CAAC;EACxB;EAEA,MAAMM,MAAMA,CAAA,EAAG;IACb,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAElD,IAAIF,KAAK,EAAE;MACT,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,cAAc,EAAE;QAC1DO,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACPgB,aAAa,EAAE,UAAUH,KAAK;QAChC;MACF,CAAC,CAAC;MAEF,IAAI,CAAChB,QAAQ,CAACO,EAAE,EAAE;QAChBa,OAAO,CAACZ,KAAK,CAAC,uBAAuB,CAAC;MACxC;IACF;EACF;EAEAa,cAAcA,CAAA,EAAG;IACf,MAAML,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAClD,OAAOF,KAAK,GAAG;MAAEG,aAAa,EAAE,UAAUH,KAAK;IAAG,CAAC,GAAG,CAAC,CAAC;EAC1D;AACF;AAEA,OAAO,MAAMM,WAAW,GAAG,IAAI1B,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}