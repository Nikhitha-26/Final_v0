{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\agnim\\\\OneDrive\\\\Desktop\\\\Project_market_place\\\\project_market_place\\\\frontend\\\\src\\\\hooks\\\\useAuth.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { authService } from \"../services/authService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in on app start\n    const token = localStorage.getItem(\"access_token\");\n    const userData = localStorage.getItem(\"user_data\");\n    if (token && userData) {\n      try {\n        setUser(JSON.parse(userData));\n      } catch (error) {\n        console.error(\"Error parsing user data:\", error);\n        localStorage.removeItem(\"access_token\");\n        localStorage.removeItem(\"user_data\");\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await authService.login(email, password);\n      localStorage.setItem(\"access_token\", response.user.access_token);\n      localStorage.setItem(\"user_data\", JSON.stringify(response.user));\n      setUser(response.user);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const register = async (username, email, password, role) => {\n    try {\n      const response = await authService.register(username, email, password, role);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      localStorage.removeItem(\"access_token\");\n      localStorage.removeItem(\"user_data\");\n      setUser(null);\n    }\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 10\n  }, this);\n}\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useState","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","useAuth","context","Error","AuthProvider","children","user","setUser","loading","setLoading","token","localStorage","getItem","userData","JSON","parse","error","console","removeItem","login","email","password","response","setItem","access_token","stringify","register","username","role","logout","value","Provider","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/agnim/OneDrive/Desktop/Project_market_place/project_market_place/frontend/src/hooks/useAuth.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { createContext, useContext, useState, useEffect } from \"react\"\r\nimport { authService } from \"../services/authService\"\r\n\r\nconst AuthContext = createContext()\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext)\r\n  if (!context) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\")\r\n  }\r\n  return context\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null)\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in on app start\r\n    const token = localStorage.getItem(\"access_token\")\r\n    const userData = localStorage.getItem(\"user_data\")\r\n\r\n    if (token && userData) {\r\n      try {\r\n        setUser(JSON.parse(userData))\r\n      } catch (error) {\r\n        console.error(\"Error parsing user data:\", error)\r\n        localStorage.removeItem(\"access_token\")\r\n        localStorage.removeItem(\"user_data\")\r\n      }\r\n    }\r\n\r\n    setLoading(false)\r\n  }, [])\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await authService.login(email, password)\r\n\r\n      localStorage.setItem(\"access_token\", response.user.access_token)\r\n      localStorage.setItem(\"user_data\", JSON.stringify(response.user))\r\n\r\n      setUser(response.user)\r\n      return response\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  const register = async (username, email, password, role) => {\r\n    try {\r\n      const response = await authService.register(username, email, password, role)\r\n      return response\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await authService.logout()\r\n    } catch (error) {\r\n      console.error(\"Logout error:\", error)\r\n    } finally {\r\n      localStorage.removeItem(\"access_token\")\r\n      localStorage.removeItem(\"user_data\")\r\n      setUser(null)\r\n    }\r\n  }\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    register,\r\n    logout,\r\n    loading,\r\n  }\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}