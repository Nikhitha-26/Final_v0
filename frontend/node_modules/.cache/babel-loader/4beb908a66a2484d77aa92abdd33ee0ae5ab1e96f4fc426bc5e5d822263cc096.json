{"ast":null,"code":"import { authService } from \"./authService\";\nconst API_BASE_URL = \"http://localhost:5000/api\";\nclass ApiService {\n  async getRelevantWebsites(query) {\n    return this.makeRequest(\"/ai/websites\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        query\n      })\n    });\n  }\n  async makeRequest(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...authService.getAuthHeaders(),\n        ...options.headers\n      },\n      ...options\n    };\n    const response = await fetch(url, config);\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.detail || \"Request failed\");\n    }\n    return response.json();\n  }\n\n  // Search endpoints\n  async searchProjects(query) {\n    return this.makeRequest(\"/search/projects\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        query\n      })\n    });\n  }\n\n  // AI endpoints\n  async getProjectSuggestions(query) {\n    return this.makeRequest(\"/ai/suggestions\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        query\n      })\n    });\n  }\n  async improveIdea(idea) {\n    return this.makeRequest(\"/ai/improve\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        idea\n      })\n    });\n  }\n  async chatWithAI(message) {\n    return this.makeRequest(\"/ai/chat\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        message\n      })\n    });\n  }\n\n  // File endpoints\n  async uploadFile(file, title, description, student_name, student_id, abstract) {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"title\", title);\n    formData.append(\"description\", description);\n    formData.append(\"student_name\", student_name);\n    formData.append(\"student_id\", student_id);\n    formData.append(\"abstract\", abstract);\n    const token = localStorage.getItem(\"access_token\");\n    if (!token) {\n      throw new Error(\"Not authenticated: Please log in again.\");\n    }\n    console.log(\"Token:\", token);\n    const response = await fetch(`${API_BASE_URL}/files/upload`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${token}`\n        // Don't set Content-Type; the browser will handle it with FormData\n      },\n      body: formData\n    });\n    if (response.status === 401) {\n      localStorage.removeItem(\"access_token\");\n      localStorage.removeItem(\"user_data\");\n      throw new Error(\"Session expired or unauthorized. Please log in again.\");\n    }\n    if (!response.ok) {\n      let error;\n      try {\n        error = await response.json();\n      } catch {\n        error = {\n          detail: \"File upload failed\"\n        };\n      }\n      throw new Error(error.detail || \"File upload failed\");\n    }\n    return response.json();\n  }\n  async getSubmissions() {\n    return this.makeRequest(\"/files/submissions\");\n  }\n  async downloadFile(fileId) {\n    const token = localStorage.getItem(\"access_token\");\n    const response = await fetch(`${API_BASE_URL}/files/download/${fileId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Download failed\");\n    }\n    return response.blob();\n  }\n}\nexport const apiService = new ApiService();","map":{"version":3,"names":["authService","API_BASE_URL","ApiService","getRelevantWebsites","query","makeRequest","method","body","JSON","stringify","endpoint","options","url","config","headers","getAuthHeaders","response","fetch","ok","error","json","Error","detail","searchProjects","getProjectSuggestions","improveIdea","idea","chatWithAI","message","uploadFile","file","title","description","student_name","student_id","abstract","formData","FormData","append","token","localStorage","getItem","console","log","Authorization","status","removeItem","getSubmissions","downloadFile","fileId","blob","apiService"],"sources":["D:/p2/Project_market_place/Project_market_place/project_market_place/frontend/src/services/apiService.js"],"sourcesContent":["import { authService } from \"./authService\"\r\n\r\nconst API_BASE_URL = \"http://localhost:5000/api\"\r\n\r\nclass ApiService {\r\n  async getRelevantWebsites(query) {\r\n    return this.makeRequest(\"/ai/websites\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ query }),\r\n    })\r\n  }\r\n\r\n  async makeRequest(endpoint, options = {}) {\r\n    const url = `${API_BASE_URL}${endpoint}`\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ...authService.getAuthHeaders(),\r\n        ...options.headers,\r\n      },\r\n      ...options,\r\n    }\r\n\r\n    const response = await fetch(url, config)\r\n\r\n    if (!response.ok) {\r\n      const error = await response.json()\r\n      throw new Error(error.detail || \"Request failed\")\r\n    }\r\n\r\n    return response.json()\r\n  }\r\n\r\n  // Search endpoints\r\n  async searchProjects(query) {\r\n    return this.makeRequest(\"/search/projects\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ query }),\r\n    })\r\n  }\r\n\r\n  // AI endpoints\r\n  async getProjectSuggestions(query) {\r\n    return this.makeRequest(\"/ai/suggestions\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ query }),\r\n    })\r\n  }\r\n\r\n  async improveIdea(idea) {\r\n    return this.makeRequest(\"/ai/improve\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ idea }),\r\n    })\r\n  }\r\n\r\n  async chatWithAI(message) {\r\n    return this.makeRequest(\"/ai/chat\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ message }),\r\n    })\r\n  }\r\n\r\n  // File endpoints\r\n  async uploadFile(file, title, description, student_name, student_id, abstract) {\r\n    const formData = new FormData()\r\n    formData.append(\"file\", file)\r\n    formData.append(\"title\", title)\r\n    formData.append(\"description\", description)\r\n    formData.append(\"student_name\", student_name)\r\n    formData.append(\"student_id\", student_id)\r\n    formData.append(\"abstract\", abstract)\r\n\r\n    const token = localStorage.getItem(\"access_token\")\r\n    if (!token) {\r\n      throw new Error(\"Not authenticated: Please log in again.\")\r\n    }\r\n\r\n    console.log(\"Token:\", token)\r\n\r\n    const response = await fetch(`${API_BASE_URL}/files/upload`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        // Don't set Content-Type; the browser will handle it with FormData\r\n      },\r\n      body: formData,\r\n    })\r\n\r\n    if (response.status === 401) {\r\n      localStorage.removeItem(\"access_token\")\r\n      localStorage.removeItem(\"user_data\")\r\n      throw new Error(\"Session expired or unauthorized. Please log in again.\")\r\n    }\r\n\r\n    if (!response.ok) {\r\n      let error\r\n      try {\r\n        error = await response.json()\r\n      } catch {\r\n        error = { detail: \"File upload failed\" }\r\n      }\r\n      throw new Error(error.detail || \"File upload failed\")\r\n    }\r\n\r\n    return response.json()\r\n  }\r\n\r\n  async getSubmissions() {\r\n    return this.makeRequest(\"/files/submissions\")\r\n  }\r\n\r\n  async downloadFile(fileId) {\r\n    const token = localStorage.getItem(\"access_token\")\r\n    const response = await fetch(`${API_BASE_URL}/files/download/${fileId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Download failed\")\r\n    }\r\n\r\n    return response.blob()\r\n  }\r\n}\r\n\r\nexport const apiService = new ApiService()\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}